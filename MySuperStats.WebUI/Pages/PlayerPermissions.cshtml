@page "{id:int}"
@using CustomFramework.WebApiUtils.Contracts.Resources

@model MySuperStats.WebUI.Pages.PlayerPermissionsModel
@inject ILocalizationService localizer

@{
    ViewData["Title"] = localizer.GetValue("PlayerPermissions");
    var culture = System.Globalization.CultureInfo.CurrentCulture.Name;
}
<script>

function getLoggedUserId(pageUrl){
  $.ajaxSetup({
    async: false
    });
  var id = 0;
  $.getJSON(pageUrl + "?handler=LoggedUserId")
      .done(function (data) {
        id = data;
    });
  return id;
}



$(document).ready(function() {

  var culture = getCultureFromURL();
  var g_id = getIdFromURL();
  var loggedUserId = 0;

  var pageUrl = "/" + culture + "/PlayerPermissions/" + g_id;

  loggedUserId = getLoggedUserId(pageUrl);

  if(loggedUserId == 0){
    $("#errorDiv").hide().slideDown().delay(1000).fadeOut();
    $("#errorMessage").text(GetLocalizedValue(pageUrl, "Failed to retrieve user list"));
    return;
  }

  var editCheck = function(cell){
    //get row data
    var data = cell.getRow().getData();

    if(data.userid == loggedUserId){
        return false;
    }

    if(data.role == 'Admin'){
        return false;
    }
    else{
       return true;
    }
  };

  var roles = ['GroupAdmin', 'Editor', 'Player'];


  //create Tabulator on DOM element with id "example-table"
  var table = new Tabulator("#user-role-table", {
    height:500, // set height of table (in CSS or here), this enables the Virtual DOM and improves render speed dramatically (can be any valid css height value)
    layout:"fitColumns", //fit columns to width of table (optional)
    pagination : "local",
    ajaxLoader: true,
    paginationSize: 15,
    langs: getTabulatorLocalization(), 
    columns:[ //Define Table Columns
      {title:"userid", field:"userid", visible:false},
      {title:"roleid", field:"roleid", visible:false},
      {title:"Ad-Soyad", field:"name", width:"50%"},
      {title:"Rol", field:"role", width:"50%", editable:editCheck, editor:"select", editorParams: {
            values:roles, //create list of values from all values contained in this column
      }},
    ],
    cellEditing: function(cell) {
        var role = cell.getData().role;
        var userid = cell.getData().userid;

        if(userid == loggedUserId){
            $("#warningDiv").hide().slideDown().delay(1000).fadeOut();
            $("#warningMessage").text(GetLocalizedValue(pageUrl, "You can not change your own role"));
            return;
        }

        if (role == 'Admin'){
            $("#warningDiv").hide().slideDown().delay(1000).fadeOut();
            $("#warningMessage").text(GetLocalizedValue(pageUrl, "You are not authorized to change this role"));
            return; 
        }        
    },
    cellEdited: function(cell) {
        var roleid = cell.getData().roleid;
        var role = cell.getData().role;
        var userid = cell.getData().userid;

          $.ajax({
              type: "POST",
              url: pageUrl + "?handler=FromGrid",
              beforeSend: function (xhr) {
                  xhr.setRequestHeader("XSRF-TOKEN",
                      $('input:hidden[name="__RequestVerificationToken"]').val());
                      $(".overlay").show();
              },
              contentType: "application/json; charset=utf-8",
              dataType: "json",
              data: JSON.stringify({  
                  userid: userid,
                  roleid: 0,
                  role: role
              }),     
              success: function(response, textStatus, xhr){
                if (response == "OK"){
                  $("#successDiv").hide().slideDown().delay(500).fadeOut();
                }
                else{
                  $("#errorDiv").hide().slideDown().delay(2000).fadeOut();
                  $("#errorMessage").text(response);                  
                }
              },
              error: function(XMLHttpRequest, textStatus, error){
                $("#errorDiv").hide().slideDown().delay(1000).fadeOut();
                $("#errorMessage").text(GetLocalizedValue(pageUrl, "AnErrorHasOccured"));
              },
              complete: function(){
                $(".overlay").hide();
              }
          });
     },        
    rowClick:function(e, row){ //trigger an alert message when the row is clicked
      //alert("Row " + row.getData().id + " Clicked!!!!");
    },
  });
  table.setData(pageUrl + "?handler=Roles");
  table.setLocale(culture);

} );

</script>

    <!-- Main content -->
    <section class="content">
      <div class="row">
        <div class="col-xs-12">
          <div class="box">
            <div class="box-header">
              <h3 class="box-title">@(localizer.GetValue("You can change the user role by clicking the corresponding role on the table"))...</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
              <div id="user-role-table"></div>
            </div>
            <!-- /.box-body -->
          </div>
          <!-- /.box -->
        </div>
        <!-- /.col -->
      </div>
      <!-- /.row -->

    <div class="container">
      <div id="successDiv" class="alert alert-success" style="display:none">
        <strong>@(localizer.GetValue("Successful"))!</strong> <span id="successMessage">@(localizer.GetValue("Success"))</span>
      </div>
      <div id="warningDiv" class="alert alert-warning" style="display:none">
        <strong>@(localizer.GetValue("Warning"))!</strong> <span id="warningMessage"></span>
      </div>        
      <div id="errorDiv" class="alert alert-danger" style="display:none">
        <strong>@(localizer.GetValue("Error"))!</strong> <span id="errorMessage">@(localizer.GetValue("AnErrorHasOccured"))</span>
      </div>
    </div>

    </section>
    <!-- /.content -->
