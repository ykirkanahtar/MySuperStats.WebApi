@page "{id:int}"
@using CustomFramework.BaseWebApi.Resources
@model MySuperStats.WebUI.Pages.BasketballStatsEntryModel
@inject ILocalizationService localizer

@{
    ViewData["Title"] = localizer.GetValue("StatisticEntry");
    var culture = System.Globalization.CultureInfo.CurrentCulture.Name;
}
<script>
$(document).ready(function() {

  var culture = getCultureFromURL();

  var g_id = getIdFromURL();
  var loggedUserId = 0;
  var pageUrl = "/" + culture + "/BasketballStatsEntry/" + g_id;


  function MatchStats(matchdate, order,durationinminutes, videolink, firstteamstats, secondteamstats){
      this.matchdate = matchdate;
      this.order = order;
      this.durationinminutes = durationinminutes;
      this.videolink = videolink;
      this.firstteamstats = firstteamstats;
      this.secondteamstats = secondteamstats;
  }  

  var firstTeam = [];
  var secondTeam = [];

  var firstTeamStats = [];
  var secondTeamStats = [];

  var team1TotalLaneWithPoint = 0;
  var team2TotalLaneWithPoint = 0;

  var team1TotalOnePoint = 0;
  var team2TotalOnePoint = 0;

  var team1TotalTwoPoint = 0;
  var team2TotalTwoPoint = 0;

  function getTeamStatsTable(tableName, data, statsSelectionData, isTeam1, opponentTeamTableName){
      var tabulatorName = "#" + tableName + "Stats";

      var columnData = [
        {title:"playerid", field:"playerid", visible:false},
        {title: GetLocalizedValue(pageUrl, "FirstNameLastName"), field:"name"},
      {title: GetLocalizedValue(pageUrl, "OnePoint"), field:"onepoint", editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]},
      ];

      var twoPointVisibility = statsSelectionData[0].haschecked;
      var missingOnePointVisibility = statsSelectionData[1].haschecked;
      var missingTwoPointVisibility = statsSelectionData[2].haschecked;
      var reboundVisibility = statsSelectionData[3].haschecked;
      var stealBallVisibility = statsSelectionData[4].haschecked;
      var looseBallVisibility = statsSelectionData[5].haschecked;
      var assistVisibility = statsSelectionData[6].haschecked;
      var interruptVisibility = statsSelectionData[7].haschecked;
      var laneVisibility = statsSelectionData[8].haschecked;
      var laneWithoutPointVisibility = statsSelectionData[9].haschecked;


      columnData.push({title: GetLocalizedValue(pageUrl, "TwoPoint"), field:"twopoint", visible: twoPointVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "MissingOnePoint"), field:"missingonepoint", visible:missingOnePointVisibility,  editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "MissingTwoPoint"), field:"missingtwopoint", visible:missingTwoPointVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "Rebound"), field:"rebound", visible:reboundVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "StealBall"), field:"stealball", visible:stealBallVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "LooseBall"), field:"looseball", visible: looseBallVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "Assist"), field:"assist", visible: assistVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "Interrupt"), field:"interrupt", visible: interruptVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "LaneWithPoint"), field:"lane", visible: interruptVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});
      columnData.push({title: GetLocalizedValue(pageUrl, "LaneWithoutPoint"), field:"lanewithoutpoint", visible: interruptVisibility, editor:"number", bottomCalc:"sum", validator:["min:0", "max:100", "integer"]});

      var table = new Tabulator(tabulatorName, {
          height:250, // set height of table (in CSS or here), this enables the Virtual DOM and improves render speed dramatically (can be any valid css height value)
          layout:"fitColumns", //fit columns to width of table (optional)
          responsiveLayout:true, // enable responsive layouts    
          pagination : "local",
          ajaxLoader: true,
          paginationSize: 6,
          langs: getTabulatorLocalization(), 
          columns: columnData,            
          cellEdited: function(cell) {              
              var results = table.getCalcResults();
              var onePointTotal = results.bottom.onepoint;
              var twoPointTotal = results.bottom.twopoint;
              var lanePointTotal = results.bottom.lane;

              if(isTeam1 == true){
                team1TotalOnePoint = onePointTotal;
                team1TotalTwoPoint = twoPointTotal;
                team1TotalLaneWithPoint = lanePointTotal;
                
                $("#" + tableName + "Score").text(onePointTotal + (twoPointTotal * 2) + team2TotalLaneWithPoint);
                $("#" + opponentTeamTableName + "Score").text(team2TotalOnePoint + (team2TotalTwoPoint * 2) + team1TotalLaneWithPoint);
              }
              else{
                team2TotalOnePoint = onePointTotal;
                team2TotalTwoPoint = twoPointTotal;
                team2TotalLaneWithPoint = lanePointTotal;
 
                $("#" + tableName + "Score").text(onePointTotal + (twoPointTotal * 2) + team1TotalLaneWithPoint);
                $("#" + opponentTeamTableName + "Score").text(team1TotalOnePoint + (team1TotalTwoPoint * 2) + team2TotalLaneWithPoint);
              }

          },      
        });    
      
      table.setData(data);
      table.setLocale(culture);

      return table;
  }

  $("#btnBackToMatchDetails").click( function(e)
  {
      $('#divCreateTeams').hide();
      $("#txtMatchDate").prop('disabled', false);
      $("#txtOrder").prop('disabled', false);
      $("#txtDurationInMinutes").prop('disabled', false);
      $("#txtVideoLink").prop('disabled', false);
      $("#btnEntryStats").prop('disabled', false);
      e.preventDefault();
  });

  $("#btnEntryStats").click(function(e)
  {                      
    var orderValidation = $('#txtOrder').valid();
    var durationValidation = $('#txtDurationInMinutes').valid();
    var videoLinkValidation = $('#txtVideoLink').valid();
    var order = $("#txtOrder").val();
    var matchDateString = $('#txtMatchDate').val();
    
    let model = {
          "MatchDateString": matchDateString,
          "Order": order,
          "MatchGroupId": g_id
    };

      $.ajax({
          type: "POST",
          url: pageUrl + "?handler=CheckMatchIsUnique",
          beforeSend: function (xhr) {
              xhr.setRequestHeader("XSRF-TOKEN",
                  $('input:hidden[name="__RequestVerificationToken"]').val());
                  $(".overlay").show();
          },
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          data: JSON.stringify(model),     
          success: function(response, textStatus, xhr){
            if (response == true){
              if(orderValidation && durationValidation && videoLinkValidation){
                  $('#divCreateTeams').show();
                  $("#txtMatchDate").prop('disabled', true);
                  $("#txtOrder").prop('disabled', true);
                  $("#txtDurationInMinutes").prop('disabled', true);
                  $("#txtVideoLink").prop('disabled', true);
                  $("#btnEntryStats").prop('disabled', true);
              }

              getTeamPlayers(pageUrl, culture, firstTeam, "basketball", "first-team-players");
              getTeamPlayers(pageUrl, culture, secondTeam, "basketball", "second-team-players");
            }
            else{
              $("#errorDiv").hide().slideDown().delay(2000).fadeOut();
              $("#errorMessage").text(GetLocalizedValue(pageUrl, "MatchDate and order must be unique")); 
            }
          },
          error: function(XMLHttpRequest, textStatus, error){
            $("#errorDiv").hide().slideDown().delay(1000).fadeOut();
            $("#errorMessage").text(GetLocalizedValue(pageUrl, "AnErrorHasOccured"));
          },
          complete: function(){
            $(".overlay").hide();
          }
      });

    e.preventDefault();

  }); 

  var firstTeamStatsTable;
  var secondTeamStatsTable;
  var statsSelectionTable;

  $("#btnSetTeamPlayers").click( function(e)
  {
    if(firstTeam.length == 0 || secondTeam.length == 0){
        $("#errorDiv").hide().slideDown().delay(1000).fadeOut();
        $("#errorMessage").text(GetLocalizedValue(pageUrl, "Please select players from both teams"));
        e.preventDefault();
        return;
    }

    var data = [
        {id: 1, name: GetLocalizedValue(pageUrl, "TwoPoint"), haschecked: true},
        {id: 2, name: GetLocalizedValue(pageUrl, "MissingOnePoint"), haschecked: true},
        {id: 3, name: GetLocalizedValue(pageUrl, "MissingTwoPoint"), haschecked: true},
        {id: 4, name: GetLocalizedValue(pageUrl, "Rebound"), haschecked: true},
        {id: 5, name: GetLocalizedValue(pageUrl, "StealBall"), haschecked: true},
        {id: 6, name: GetLocalizedValue(pageUrl, "LooseBall"), haschecked: true},
        {id: 7, name: GetLocalizedValue(pageUrl, "Assist"), haschecked: true},
        {id: 8, name: GetLocalizedValue(pageUrl, "Interrupt"), haschecked: true},
        {id: 9, name: GetLocalizedValue(pageUrl, "LaneWithPoint"), haschecked: true},
        {id: 10, name: GetLocalizedValue(pageUrl, "LaneWithoutPoint"), haschecked: true},
    ];

    statsSelectionTable = getStatsType(pageUrl, data);

    $("#divCreateTeams").hide();
    $("#divSelectStats").show();
    e.preventDefault();
  });  

  $("#btnSelectStats").click( function(e)
  {
    firstTeamStatsTable = getTeamStatsTable("firstTeam", firstTeam, statsSelectionTable.getData(), true, "secondTeam");
    secondTeamStatsTable = getTeamStatsTable("secondTeam", secondTeam, statsSelectionTable.getData(), false, "firstTeam");

    $("#divSelectStats").hide();
    $("#divTeamStats").show();
    e.preventDefault();
  });  

  $("#btnBackToCreateTeams").click( function(e)
  {
      $("#divSelectStats").hide();    
      $("#divCreateTeams").show();
      e.preventDefault();
  });  

  $("#btnBackToSelectStats").click( function(e)
  {
      $("#divTeamStats").hide();    
      $("#divSelectStats").show();
      e.preventDefault();
  });     

  $("#btnSendStats").click(function(e)
  {                   
      var firstTeamGridDatas = firstTeamStatsTable.getData();
      var secondTeamGridDatas = secondTeamStatsTable.getData();   

      var statsSelectionData = statsSelectionTable.getData();

      var twoPointVisibility = statsSelectionData[0].haschecked;
      var missingOnePointVisibility = statsSelectionData[1].haschecked;
      var missingTwoPointVisibility = statsSelectionData[2].haschecked;
      var reboundVisibility = statsSelectionData[3].haschecked;
      var stealBallVisibility = statsSelectionData[4].haschecked;
      var looseBallVisibility = statsSelectionData[5].haschecked;
      var assistVisibility = statsSelectionData[6].haschecked;
      var interruptVisibility = statsSelectionData[7].haschecked;    
      var laneVisibility = statsSelectionData[8].haschecked;      
      var laneWithoutPointVisibility = statsSelectionData[9].haschecked;      


      for (i = 0; i < firstTeamGridDatas.length; i++){
        addToBasketballStats(
          firstTeamStats
        , firstTeamGridDatas[i].playerid
        , 1
        , firstTeamGridDatas[i].onepoint
        , (twoPointVisibility) ?  firstTeamGridDatas[i].twopoint : null
        , (missingOnePointVisibility) ?  firstTeamGridDatas[i].missingtwopoint : null
        , (missingTwoPointVisibility) ?  firstTeamGridDatas[i].missingtwopoint : null
        , (reboundVisibility) ?  firstTeamGridDatas[i].rebound : null
        , (stealBallVisibility) ?  firstTeamGridDatas[i].stealball : null
        , (looseBallVisibility) ?  firstTeamGridDatas[i].looseball : null
        , (assistVisibility) ?  firstTeamGridDatas[i].assist : null
        , (interruptVisibility) ?  firstTeamGridDatas[i].interrupt : null
        , (laneVisibility) ?  firstTeamGridDatas[i].lane : null
        , (laneWithoutPointVisibility) ?  firstTeamGridDatas[i].lanewithoutpoint : null
        );
      }      

      for (i = 0; i < secondTeamGridDatas.length; i++){
        addToBasketballStats(
          secondTeamStats
        , secondTeamGridDatas[i].playerid
        , 2
        , secondTeamGridDatas[i].onepoint
        , (twoPointVisibility) ?  secondTeamGridDatas[i].twopoint : null
        , (missingOnePointVisibility) ?  secondTeamGridDatas[i].missingtwopoint : null
        , (missingTwoPointVisibility) ?  secondTeamGridDatas[i].missingtwopoint : null
        , (reboundVisibility) ?  secondTeamGridDatas[i].rebound : null
        , (stealBallVisibility) ?  secondTeamGridDatas[i].stealball : null
        , (looseBallVisibility) ?  secondTeamGridDatas[i].looseball : null
        , (assistVisibility) ?  secondTeamGridDatas[i].assist : null
        , (interruptVisibility) ?  secondTeamGridDatas[i].interrupt : null
        , (laneVisibility) ?  secondTeamGridDatas[i].lane : null
        , (laneWithoutPointVisibility) ?  secondTeamGridDatas[i].lanewithoutpoint : null
        );
      }        

      var matchDate = $("#txtMatchDate").val();    

      var order = $("#txtOrder").val();
      var durationInMinutes = $("#txtDurationInMinutes").val();
      var videoLink = $("#txtVideoLink").val();

      var matchStats = new MatchStats(matchDate, order,durationInMinutes, videoLink, firstTeamStats, secondTeamStats);


      $.ajax({
          type: "POST",
          url: pageUrl + "?handler=FromGrid",
          beforeSend: function (xhr) {
              xhr.setRequestHeader("XSRF-TOKEN",
                  $('input:hidden[name="__RequestVerificationToken"]').val());
                  $(".overlay").show();
          },
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          data: JSON.stringify({  
              MatchDate: matchDate
              , Order: order
              , DurationInMinutes: durationInMinutes
              , VideoLink: videoLink
              , FirstTeamStats: firstTeamStats
              , SecondTeamStats: secondTeamStats
          }),     
          success: function(response, textStatus, xhr){
            if (response.startsWith("OK-")){
              $("#btnSendStats").attr("disabled", "disabled");
              var redirectUrl = response.slice(3);
              window.location.href = redirectUrl;
            }
            else{
              $("#errorDiv").hide().slideDown().delay(3000).fadeOut();
              $("#errorMessage").text(response);                  
            }
          },
          error: function(XMLHttpRequest, textStatus, error){
            $("#errorDiv").hide().slideDown().delay(3000).fadeOut();
            $("#errorMessage").text(GetLocalizedValue(pageUrl, "AnErrorHasOccured") + error);
          },
          complete: function(){
            $(".overlay").hide();
          }
      });

    e.preventDefault();
  });   

});

</script>

<!-- Main content -->
<style>
    .row {
        @* display: table; *@
        width: 100%;
    }

    .row [class*="col-"] {
        float: none;
        display: table-cell;
        vertical-align: top;
    }
</style>
<section class="content">
 
  <form method="post">
        <div class="card">
        <!-- general form elements -->
          <div class="card-header">
            <h3 class="card-title">@(localizer.GetValue("MatchInfo"))</h3>
          </div>       

          <!-- /.box-header -->
            <div class="card-body">
                <div class="row">     

                  <div class="col-md-2">

                        <label>@(localizer.GetValue("MatchDate"))</label> 
                        <div class="input-group mb-2">
                            <input id="txtMatchDate" type="text" asp-for="Model.MatchRequest.MatchDate" placeholder="@(localizer.GetValue("Enter the date of the match"))" class="form-control" data-inputmask-alias="datetime" data-inputmask-inputformat="dd/mm/yyyy" data-mask>
                            <div class="input-group-append">
                                <div class="input-group-text">
                                <span class="far fa-calendar-alt"></span>
                                </div>
                            </div>
                        </div>
                        <div class="input-group mb-2">
                           <span asp-validation-for="Model.MatchRequest.MatchDate" class="text-danger"></span>                        
                        </div>                                          
 
                  </div>

                  <div class="col-md-2">

                        <label>@(localizer.GetValue("Order"))</label> 
                        <div class="input-group mb-2">
                          <input id="txtOrder" asp-for="Model.MatchRequest.Order" class="form-control" type="text" placeholder="@(localizer.GetValue("Enter the order of the match"))">
                        </div>
                        <div class="input-group mb-2">
                           <span asp-validation-for="Model.MatchRequest.Order" class="text-danger"></span>                        
                        </div>                                          
 
                  </div>        

                  <div class="col-md-2">

                        <label>@(localizer.GetValue("DurationOfTheMatch"))</label> 
                        <div class="input-group mb-2">
                          <input id="txtDurationInMinutes" asp-for="Model.MatchRequest.DurationInMinutes" class="form-control" type="text" placeholder="@(localizer.GetValue("Enter the duration of the match"))">
                        </div>
                        <div class="input-group mb-2">
                           <span asp-validation-for="Model.MatchRequest.DurationInMinutes" class="text-danger"></span>
                        </div>                                          
 
                  </div>   

                  <div class="col-md-2">

                        <label>@(localizer.GetValue("VideoLink"))</label> 
                        <div class="input-group mb-2">
                            <input id="txtVideoLink" asp-for="Model.MatchRequest.VideoLink" class="form-control" type="text" placeholder="@(localizer.GetValue("Enter the url of the video"))">
                        </div>
                        <div class="input-group mb-2">
                            <span asp-validation-for="Model.MatchRequest.VideoLink" class="text-danger"></span>
                        </div>                                          
 
                  </div>                                              

                  <div class="col-md-4" style="padding-top: 30px;">
                        <input type="submit" id="btnEntryStats" class="btn btn-primary" value="@localizer.GetValue("Select the teams")"/>                   
                  </div>                  
                </div>    
                <!-- row -->
            </div>
            <!-- /.box-body -->

        </div>
        <!-- /.card -->


    <div class="container">
      <div id="successDiv" class="alert alert-success" style="display:none">
        <strong>@(localizer.GetValue("Successful"))!</strong> <span id="successMessage">@(localizer.GetValue("Success"))</span>
      </div>
      <div id="warningDiv" class="alert alert-warning" style="display:none">
        <strong>@(localizer.GetValue("Warning"))!</strong> <span id="warningMessage"></span>
      </div>        
      <div id="errorDiv" class="alert alert-danger" style="display:none">
        <strong>@(localizer.GetValue("Error"))!</strong> <span id="errorMessage">@(localizer.GetValue("AnErrorHasOccured"))</span>
      </div>
    </div>

    <div id="divCreateTeams" style="display:none">
        <div class="row">
          <!-- left column -->
          <div class="col-md-5">
            <!-- general form elements -->
            <div class="box box-primary">
              <!-- /.box-header -->
                <div class="box-body">
                  
                    <label>@(localizer.GetValue("Select players of the first team"))</label>
                    <div id="first-team-players"> </div>
                  
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->

          </div>
          <!--/.col (left) -->

          <!-- middle column -->
          <div class="col-md-5">
            <!-- general form elements -->
            <div class="box box-primary">
              <!-- /.box-header -->
                <div class="box-body">
                  
                    <label>@(localizer.GetValue("Select players of the second team"))</label>
                      <div id="second-team-players"> </div>
                  
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
          </div>
          <!--/.col (middle) -->

          <!-- right column -->
          <div class="col-md-2" style="vertical-align: middle;">
              <input type="submit" id="btnBackToMatchDetails" class="btn btn-primary" value="@(localizer.GetValue("GoBack"))" style="width:150px"/>
              <br>
              <br>
              <input type="submit" id="btnSetTeamPlayers" class="btn btn-primary" value="@(localizer.GetValue("CreateTeams"))" style="width:150px"/>
          </div>
          <!--/.col (right) -->
        </div>
        <!-- /.row -->
    </div>
    <!-- /.createTeams -->

    <div id="divSelectStats" style="display:none">
        <div class="row">
          <!-- left column -->
          <div class="col-md-10">
            <!-- general form elements -->
            <div class="box box-primary">
              <!-- /.box-header -->
                <div class="box-body">
                  
                    <label>@(localizer.GetValue("Select basketball stats"))</label>
                    <div id="selectStats"> </div>
                  
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->

          </div>
          <!--/.col (left) -->   

          <!-- right column -->
          <div class="col-md-2" style="vertical-align: middle;">
              <input type="submit" id="btnBackToCreateTeams" class="btn btn-primary" value="@(localizer.GetValue("GoBack"))" style="width:150px"/>
              <br>
              <br>
              <input type="submit" id="btnSelectStats" class="btn btn-primary" value="@(localizer.GetValue("Select basketball stats"))" style="width:150px"/>
          </div>
          <!--/.col (right) -->
        </div>
        <!-- /.row -->     
    </div>
    <!-- /.select basketball stats -->  

    <div id="divTeamStats" style="display:none">
      <div class="row">
        <div class="col-md-10">
          <div class="row">
            <div class="col-md-12">
              <!-- general form elements -->
              <div class="box box-primary">
                <!-- /.box-header -->
                  <div class="box-body">
                    
                      <label>@(localizer.GetValue("FirstTeam")):</label><span id="firstTeamScore"></span>
                      <div id="firstTeamStats"> </div>
                    
                  </div>
                  <!-- /.box-body -->
              </div>
              <!-- /.box -->
            </div>
            <!--/.col -->
          </div>
          <!--/.row -->

        <div class="row">
            <div class="col-md-12">
              <!-- general form elements -->
              <div class="box box-primary">
                <!-- /.box-header -->
                  <div class="box-body">
                    
                      <label>@(localizer.GetValue("SecondTeam")):</label><span id="secondTeamScore"></span>                  
                      <div id="secondTeamStats"> </div>
                    
                  </div>
                  <!-- /.box-body -->
              </div>
              <!-- /.box -->
            </div>
            <!--/.col -->
          </div>
          <!--/.row -->      
        </div>
        <div class="col-md-2" style="vertical-align: middle;">
              <input type="submit" id="btnBackToCreateTeams" class="btn btn-primary" value="@(localizer.GetValue("GoBack"))" style="width:150px"/>
              <br>
              <br>          
            <input type="submit" id="btnSendStats" class="btn btn-primary" value="@(localizer.GetValue("SaveStats"))" style="width:150px"/>
        </div>
      </div>          
    </div>
    <!-- /.team-stats -->

  </form>

</section>
<!-- /.content -->